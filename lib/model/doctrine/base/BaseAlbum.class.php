<?php

/**
 * BaseAlbum
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $image
 * @property integer $year
 * @property string $dl_url
 * @property boolean $is_activated
 * @property boolean $is_va
 * @property integer $label_id
 * @property Label $Label
 * @property Doctrine_Collection $Track
 * 
 * @method integer             getId()           Returns the current record's "id" value
 * @method string              getTitle()        Returns the current record's "title" value
 * @method string              getImage()        Returns the current record's "image" value
 * @method integer             getYear()         Returns the current record's "year" value
 * @method string              getDlUrl()        Returns the current record's "dl_url" value
 * @method boolean             getIsActivated()  Returns the current record's "is_activated" value
 * @method boolean             getIsVa()         Returns the current record's "is_va" value
 * @method integer             getLabelId()      Returns the current record's "label_id" value
 * @method Label               getLabel()        Returns the current record's "Label" value
 * @method Doctrine_Collection getTrack()        Returns the current record's "Track" collection
 * @method Album               setId()           Sets the current record's "id" value
 * @method Album               setTitle()        Sets the current record's "title" value
 * @method Album               setImage()        Sets the current record's "image" value
 * @method Album               setYear()         Sets the current record's "year" value
 * @method Album               setDlUrl()        Sets the current record's "dl_url" value
 * @method Album               setIsActivated()  Sets the current record's "is_activated" value
 * @method Album               setIsVa()         Sets the current record's "is_va" value
 * @method Album               setLabelId()      Sets the current record's "label_id" value
 * @method Album               setLabel()        Sets the current record's "Label" value
 * @method Album               setTrack()        Sets the current record's "Track" collection
 * 
 * @package    chiptunedb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAlbum extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('album');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('year', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('dl_url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('is_va', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('label_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Label', array(
             'local' => 'label_id',
             'foreign' => 'id'));

        $this->hasMany('Track', array(
             'local' => 'id',
             'foreign' => 'album_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}